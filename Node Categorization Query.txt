Problem Statement :You are given a table, BST, containing two columns: N and P, where N represents the value of a node in Binary Tree, and P is the parent of N.
Root: If node is root node.
Leaf: If node is leaf node.
Inner: If node is neither root nor leaf node.


The Problem Statement Can be solved in 3 Different ways  in Oracle/MySql and SQL Server.

Category : INLINE Query Solutions

Solution 1 : IN

SELECT n,
	CASE
		WHEN p IS NULL THEN 'Root'
		WHEN n IN (SELECT DISTINCT p FROM bst) THEN 'Inner'
		ELSE 'Leaf'
	END
FROM bst
ORDER BY n;

Solution 2 : EXISTS

SELECT n,
	CASE
		WHEN p IS NULL THEN 'Root'
		WHEN EXISTS (SELECT * FROM bst in_bst WHERE in_bst.p = out_bst.n) THEN 'Inner'
		ELSE 'Leaf'
	END
FROM bst out_bst
ORDER BY n;

Solution 3 : Self Join 

SELECT n,
	CASE
		WHEN p IS NULL THEN 'Root'
		WHEN n IN (SELECT a.p FROM bst a JOIN bst b ON a.p = b.n) THEN 'Inner'
		ELSE 'Leaf'
	END
FROM bst
ORDER BY n;

Solution 4 :

